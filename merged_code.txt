[AlignJustifyIcon.tsx]: ./src\components\icon\AlignJustifyIcon.tsx
export const AlignJustifyIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M21 6H3V5h18v1zm0 5H3v1h18v-1zm0 6H3v1h18v-1z"></path>
    </svg>
  );
};


[BellIcon.tsx]: ./src\components\icon\BellIcon.tsx
export const BellIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <path d="M10 20h4c0 1.1-.9 2-2 2s-2-.9-2-2zm10-2.65V19H4v-1.65l2-1.88v-5.15C6 7.4 7.56 5.1 10 4.34v-.38c0-1.42 1.49-2.5 2.99-1.76.65.32 1.01 1.03 1.01 1.76v.39c2.44.75 4 3.06 4 5.98v5.15l2 1.87zm-1 .42-2-1.88v-5.47c0-2.47-1.19-4.36-3.13-5.1-1.26-.53-2.64-.5-3.84.03C8.15 6.11 7 7.99 7 10.42v5.47l-2 1.88V18h14v-.23z"></path>
    </svg>
  );
};


[CameraIcon.tsx]: ./src\components\icon\CameraIcon.tsx
export const CameraIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M14 13h-3v3H9v-3H6v-2h3V8h2v3h3v2zm3-7H3v12h14v-6.39l4 1.83V8.56l-4 1.83V6m1-1v3.83L22 7v8l-4-1.83V19H2V5h16z"></path>
    </svg>
  );
};


[ChannelsIcon.tsx]: ./src\components\icon\ChannelsIcon.tsx
export const ChannelsIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M10 18v-6l5 3-5 3zm7-15H7v1h10V3zm3 3H4v1h16V6zm2 3H2v12h20V9zM3 10h18v10H3V10z"></path>
    </svg>
  );
};


[ClockIcon.tsx]: ./src\components\icon\ClockIcon.tsx
export const ClockIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <path d="M14.97 16.95 10 13.87V7h2v5.76l4.03 2.49-1.06 1.7zM12 3c-4.96 0-9 4.04-9 9s4.04 9 9 9 9-4.04 9-9-4.04-9-9-9m0-1c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2z"></path>
    </svg>
  );
};


[CourseIcon.tsx]: ./src\components\icon\CourseIcon.tsx
export const CourseIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M22 9.71 12 4 2 9.71l3.5 2v5.57l6.5 3.71 6.5-3.65v-5.63l2.5-1.43v6.46h1V9.71zm-4.5 7.04L12 19.84 6.5 16.7v-4.42l5.5 3.14 5.5-3.14v4.47zM12 14.27 4.02 9.71 12 5.15l7.98 4.56L12 14.27z"></path>
    </svg>
  );
};


[DislikeIcon.tsx]: ./src\components\icon\DislikeIcon.tsx
export const DislikeIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M17,4h-1H6.57C5.5,4,4.59,4.67,4.38,5.61l-1.34,6C2.77,12.85,3.82,14,5.23,14h4.23l-1.52,4.94C7.62,19.97,8.46,21,9.62,21 c0.58,0,1.14-0.24,1.52-0.65L17,14h4V4H17z M10.4,19.67C10.21,19.88,9.92,20,9.62,20c-0.26,0-0.5-0.11-0.63-0.3 c-0.07-0.1-0.15-0.26-0.09-0.47l1.52-4.94l0.4-1.29H9.46H5.23c-0.41,0-0.8-0.17-1.03-0.46c-0.12-0.15-0.25-0.4-0.18-0.72l1.34-6 C5.46,5.35,5.97,5,6.57,5H16v8.61L10.4,19.67z M20,13h-3V5h3V13z"></path>
    </svg>
  );
};


[DownloadIcon.tsx]: ./src\components\icon\DownloadIcon.tsx
export const DownloadIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M17 18v1H6v-1h11zm-.5-6.6-.7-.7-3.8 3.7V4h-1v10.4l-3.8-3.8-.7.7 5 5 5-4.9z"></path>
    </svg>
  );
};


[EllipsisIcon.tsx]: ./src\components\icon\EllipsisIcon.tsx
export const EllipsisIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M7.5 12c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zm4.5-1.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm6 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path>
    </svg>
  );
};


[FlagIcon.tsx]: ./src\components\icon\FlagIcon.tsx
export const FlagIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="m13.18 4 .24 1.2.16.8H19v7h-5.18l-.24-1.2-.16-.8H6V4h7.18M14 3H5v18h1v-9h6.6l.4 2h7V5h-5.6L14 3z"></path>
    </svg>
  );
};


[HelpIcon.tsx]: ./src\components\icon\HelpIcon.tsx
export const HelpIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M15.36 9.96c0 1.09-.67 1.67-1.31 2.24-.53.47-1.03.9-1.16 1.6l-.04.2H11.1l.03-.28c.14-1.17.8-1.76 1.47-2.27.52-.4 1.01-.77 1.01-1.49 0-.51-.23-.97-.63-1.29-.4-.31-.92-.42-1.42-.29-.59.15-1.05.67-1.19 1.34l-.05.28H8.57l.06-.42c.2-1.4 1.15-2.53 2.42-2.87 1.05-.29 2.14-.08 2.98.57.85.64 1.33 1.62 1.33 2.68zM12 18c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-15c-4.96 0-9 4.04-9 9s4.04 9 9 9 9-4.04 9-9-4.04-9-9-9m0-1c5.52 0 10 4.48 10 10s-4.48 10-10 10S2 17.52 2 12 6.48 2 12 2z"></path>
    </svg>
  );
};


[HistoryIcon.tsx]: ./src\components\icon\HistoryIcon.tsx
export const HistoryIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      fill="#ffffff"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
    >
      <g>
        <path d="M14.97 16.95 10 13.87V7h2v5.76l4.03 2.49-1.06 1.7zM22 12c0 5.51-4.49 10-10 10S2 17.51 2 12h1c0 4.96 4.04 9 9 9s9-4.04 9-9-4.04-9-9-9C8.81 3 5.92 4.64 4.28 7.38c-.11.18-.22.37-.31.56L3.94 8H8v1H1.96V3h1v4.74c.04-.09.07-.17.11-.25.11-.22.23-.42.35-.63C5.22 3.86 8.51 2 12 2c5.51 0 10 4.49 10 10z"></path>
      </g>
    </svg>
  );
};


[HomeIcon.tsx]: ./src\components\icon\HomeIcon.tsx
export const HomeIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <g>
        <path d="M4 21V10.08l8-6.96 8 6.96V21h-6v-6h-4v6H4z"></path>
      </g>
    </svg>
  );
};


[index.ts]: ./src\components\icon\index.ts
import { SaveIcon } from "./SaveIcon";
import { DownloadIcon } from "./DownloadIcon";
import { EllipsisIcon } from "./EllipsisIcon";
import { DislikeIcon } from "./DislikeIcon";
import { ShareIcon } from "./ShareIcon";
import { ProfileIcon } from "./ProfileIcon";
import { ChannelsIcon } from "./ChannelsIcon";
import { VideoIcon } from "./VideoIcon";
import { ShortVideoIcon } from "./ShortVideoIcon";
import { SettingIcon } from "./SettingIcon";
import { ReportIcon } from "./ReportIcon";
import { PlaylistIcon } from "./PlaylistIcon";
import { MyChannelIcon } from "./MyChannelIcon";
import { LikeIcon } from "./LikeIcon";
import { HomeIcon } from "./HomeIcon";
import { HistoryIcon } from "./HistoryIcon";
import { HelpIcon } from "./HelpIcon";
import { FlagIcon } from "./FlagIcon";
import { CourseIcon } from "./CourseIcon";
import { ClockIcon } from "./ClockIcon";
import { SearchIcon } from "./SearchIcon";
import { AlignJustifyIcon } from "./AlignJustifyIcon";
import { MicIcon } from "./MicIcon";
import { BellIcon } from "./BellIcon";
import { CameraIcon } from "./CameraIcon";
import { YoutubeIcon } from "./YoutubeIcon";

export {
  CameraIcon,
  YoutubeIcon,
  BellIcon,
  MicIcon,
  SearchIcon,
  AlignJustifyIcon,
  ClockIcon,
  CourseIcon,
  FlagIcon,
  HelpIcon,
  HistoryIcon,
  HomeIcon,
  LikeIcon,
  MyChannelIcon,
  PlaylistIcon,
  ReportIcon,
  SettingIcon,
  ShortVideoIcon,
  VideoIcon,
  ChannelsIcon,
  ProfileIcon,
  ShareIcon,
  DislikeIcon,
  EllipsisIcon,
  DownloadIcon,
  SaveIcon,
};


[LikeIcon.tsx]: ./src\components\icon\LikeIcon.tsx
export const LikeIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M18.77,11h-4.23l1.52-4.94C16.38,5.03,15.54,4,14.38,4c-0.58,0-1.14,0.24-1.52,0.65L7,11H3v10h4h1h9.43 c1.06,0,1.98-0.67,2.19-1.61l1.34-6C21.23,12.15,20.18,11,18.77,11z M7,20H4v-8h3V20z M19.98,13.17l-1.34,6 C18.54,19.65,18.03,20,17.43,20H8v-8.61l5.6-6.06C13.79,5.12,14.08,5,14.38,5c0.26,0,0.5,0.11,0.63,0.3 c0.07,0.1,0.15,0.26,0.09,0.47l-1.52,4.94L13.18,12h1.35h4.23c0.41,0,0.8,0.17,1.03,0.46C19.92,12.61,20.05,12.86,19.98,13.17z"></path>
    </svg>
  );
};


[MicIcon.tsx]: ./src\components\icon\MicIcon.tsx
export const MicIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <path d="M12 3c-1.66 0-3 1.37-3 3.07v5.86c0 1.7 1.34 3.07 3 3.07s3-1.37 3-3.07V6.07C15 4.37 13.66 3 12 3zm6.5 9h-1c0 3.03-2.47 5.5-5.5 5.5S6.5 15.03 6.5 12h-1c0 3.24 2.39 5.93 5.5 6.41V21h2v-2.59c3.11-.48 5.5-3.17 5.5-6.41z"></path>
    </svg>
  );
};


[MyChannelIcon.tsx]: ./src\components\icon\MyChannelIcon.tsx
export const MyChannelIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M4 20h14v1H3V6h1v14zM6 3v15h15V3H6zm2.02 14c.36-2.13 1.93-4.1 5.48-4.1s5.12 1.97 5.48 4.1H8.02zM11 8.5a2.5 2.5 0 015 0 2.5 2.5 0 01-5 0zm3.21 3.43A3.507 3.507 0 0017 8.5C17 6.57 15.43 5 13.5 5S10 6.57 10 8.5c0 1.69 1.2 3.1 2.79 3.43-3.48.26-5.4 2.42-5.78 5.07H7V4h13v13h-.01c-.38-2.65-2.31-4.81-5.78-5.07z"></path>
    </svg>
  );
};


[PlaylistIcon.tsx]: ./src\components\icon\PlaylistIcon.tsx
export const PlaylistIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M22 7H2v1h20V7zm-9 5H2v-1h11v1zm0 4H2v-1h11v1zm2 3v-8l7 4-7 4z"></path>
    </svg>
  );
};


[ProfileIcon.tsx]: ./src\components\icon\ProfileIcon.tsx
export const ProfileIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 1c4.96 0 9 4.04 9 9 0 1.42-.34 2.76-.93 3.96-1.53-1.72-3.98-2.89-7.38-3.03A3.996 3.996 0 0016 9c0-2.21-1.79-4-4-4S8 6.79 8 9c0 1.97 1.43 3.6 3.31 3.93-3.4.14-5.85 1.31-7.38 3.03C3.34 14.76 3 13.42 3 12c0-4.96 4.04-9 9-9zM9 9c0-1.65 1.35-3 3-3s3 1.35 3 3-1.35 3-3 3-3-1.35-3-3zm3 12c-3.16 0-5.94-1.64-7.55-4.12C6.01 14.93 8.61 13.9 12 13.9c3.39 0 5.99 1.03 7.55 2.98C17.94 19.36 15.16 21 12 21z"></path>
    </svg>
  );
};


[ReportIcon.tsx]: ./src\components\icon\ReportIcon.tsx
export const ReportIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <path d="M13 14h-2v-2h2v2zm0-9h-2v6h2V5zm6-2H5v16.59l3.29-3.29.3-.3H19V3m1-1v15H9l-5 5V2h16z"></path>
    </svg>
  );
};


[SaveIcon.tsx]: ./src\components\icon\SaveIcon.tsx
export const SaveIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M19 3H5v18l7-5 7 5V3z"></path>
    </svg>
  );
};


[SearchIcon.tsx]: ./src\components\icon\SearchIcon.tsx
export const SearchIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <path
        clipRule="evenodd"
        d="M16.296 16.996a8 8 0 11.707-.708l3.909 3.91-.707.707-3.909-3.909zM18 11a7 7 0 00-14 0 7 7 0 1014 0z"
        fillRule="evenodd"
      ></path>
    </svg>
  );
};


[SettingIcon.tsx]: ./src\components\icon\SettingIcon.tsx
export const SettingIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M12 9.5c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5-2.5-1.12-2.5-2.5 1.12-2.5 2.5-2.5m0-1c-1.93 0-3.5 1.57-3.5 3.5s1.57 3.5 3.5 3.5 3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5zM13.22 3l.55 2.2.13.51.5.18c.61.23 1.19.56 1.72.98l.4.32.5-.14 2.17-.62 1.22 2.11-1.63 1.59-.37.36.08.51c.05.32.08.64.08.98s-.03.66-.08.98l-.08.51.37.36 1.63 1.59-1.22 2.11-2.17-.62-.5-.14-.4.32c-.53.43-1.11.76-1.72.98l-.5.18-.13.51-.55 2.24h-2.44l-.55-2.2-.13-.51-.5-.18c-.6-.23-1.18-.56-1.72-.99l-.4-.32-.5.14-2.17.62-1.21-2.12 1.63-1.59.37-.36-.08-.51c-.05-.32-.08-.65-.08-.98s.03-.66.08-.98l.08-.51-.37-.36L3.6 8.56l1.22-2.11 2.17.62.5.14.4-.32c.53-.44 1.11-.77 1.72-.99l.5-.18.13-.51.54-2.21h2.44M14 2h-4l-.74 2.96c-.73.27-1.4.66-2 1.14l-2.92-.83-2 3.46 2.19 2.13c-.06.37-.09.75-.09 1.14s.03.77.09 1.14l-2.19 2.13 2 3.46 2.92-.83c.6.48 1.27.87 2 1.14L10 22h4l.74-2.96c.73-.27 1.4-.66 2-1.14l2.92.83 2-3.46-2.19-2.13c.06-.37.09-.75.09-1.14s-.03-.77-.09-1.14l2.19-2.13-2-3.46-2.92.83c-.6-.48-1.27-.87-2-1.14L14 2z"></path>
    </svg>
  );
};


[ShareIcon.tsx]: ./src\components\icon\ShareIcon.tsx
export const ShareIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="M15 5.63 20.66 12 15 18.37V14h-1c-3.96 0-7.14 1-9.75 3.09 1.84-4.07 5.11-6.4 9.89-7.1l.86-.13V5.63M14 3v6C6.22 10.13 3.11 15.33 2 21c2.78-3.97 6.44-6 12-6v6l8-9-8-9z"></path>
    </svg>
  );
};


[ShortVideoIcon.tsx]: ./src\components\icon\ShortVideoIcon.tsx
export const ShortVideoIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      className={className}
      fill="#ffffff"
    >
      <path d="M10 14.65v-5.3L15 12l-5 2.65zm7.77-4.33-1.2-.5L18 9.06c1.84-.96 2.53-3.23 1.56-5.06s-3.24-2.53-5.07-1.56L6 6.94c-1.29.68-2.07 2.04-2 3.49.07 1.42.93 2.67 2.22 3.25.03.01 1.2.5 1.2.5L6 14.93c-1.83.97-2.53 3.24-1.56 5.07.97 1.83 3.24 2.53 5.07 1.56l8.5-4.5c1.29-.68 2.06-2.04 1.99-3.49-.07-1.42-.94-2.68-2.23-3.25zm-.23 5.86-8.5 4.5c-1.34.71-3.01.2-3.72-1.14-.71-1.34-.2-3.01 1.14-3.72l2.04-1.08v-1.21l-.69-.28-1.11-.46c-.99-.41-1.65-1.35-1.7-2.41-.05-1.06.52-2.06 1.46-2.56l8.5-4.5c1.34-.71 3.01-.2 3.72 1.14.71 1.34.2 3.01-1.14 3.72L15.5 9.26v1.21l1.8.74c.99.41 1.65 1.35 1.7 2.41.05 1.06-.52 2.06-1.46 2.56z"></path>
    </svg>
  );
};


[VideoIcon.tsx]: ./src\components\icon\VideoIcon.tsx
export const VideoIcon = ({ className }: { className?: string }) => {
  return (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      enableBackground="new 0 0 24 24"
      height="24"
      viewBox="0 0 24 24"
      width="24"
      focusable="false"
      aria-hidden="true"
      fill="#ffffff"
      className={className}
    >
      <path d="m10 8 6 4-6 4V8zm11-5v18H3V3h18zm-1 1H4v16h16V4z"></path>
    </svg>
  );
};


[YoutubeIcon.tsx]: ./src\components\icon\YoutubeIcon.tsx
import { cn } from "@/lib/utils";

export const YoutubeIcon = ({ className }: { className?: string }) => {
  return (
    <div className={cn("flex items-center gap-1", className)}>
      <img src="/youtube-logo.svg" alt="Logo youtube" className="h-7" />
      <span className="text-lg font-medium">Youtube</span>
    </div>
  );
};


[avatar.tsx]: ./src\components\ui\avatar.tsx
import * as React from "react";
import * as AvatarPrimitive from "@radix-ui/react-avatar";

import { cn } from "@/lib/utils";

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-8 w-8 shrink-0 overflow-hidden rounded-full",
      className,
    )}
    {...props}
  />
));
Avatar.displayName = AvatarPrimitive.Root.displayName;

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
));
AvatarImage.displayName = AvatarPrimitive.Image.displayName;

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className,
    )}
    {...props}
  />
));
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;

export { Avatar, AvatarImage, AvatarFallback };


[badge.tsx]: ./src\components\ui\badge.tsx
import { cn } from "@/lib/utils";

interface BadgeProps {
  children: React.ReactNode | JSX.Element;
  count: number;
}

export const Badge = ({ children, count }: BadgeProps) => {
  return (
    <div className="relative">
      {children}
      {count > 0 && (
        <div
          className={cn(
            "absolute right-1 top-1 flex h-4 w-4 items-center justify-center rounded-full bg-red-700 p-1 text-xs text-white",
            {
              "right-0 w-fit px-1": count > 9,
            },
          )}
        >
          {count > 9 ? `${9}+` : count}
        </div>
      )}
    </div>
  );
};


[button.tsx]: ./src\components\ui\button.tsx
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }


[input.tsx]: ./src\components\ui\input.tsx
import * as React from "react";

import { cn } from "@/lib/utils";
import { Keyboard } from "lucide-react";
import { SearchIcon } from "@/components/icon";

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <div
        className={cn(
          "bg-[hsl(0, 0%, 7%)] flex w-full items-center rounded-full border border-white/20 pl-5 focus-within:border-blue-400",
          className,
        )}
      >
        <input
          className="mr-5 w-full border-none bg-transparent outline-none placeholder:text-white/40"
          type={type}
          ref={ref}
          {...props}
        />
        <Keyboard className="mr-3" />
        <div className="cursor-pointer rounded-r-full border-l border-white/20 bg-white/10 p-[7px] px-5">
          <SearchIcon />
        </div>
      </div>
    );
  },
);
Input.displayName = "Input";

export { Input };


[sheet.tsx]: ./src\components\ui\sheet.tsx
import * as React from "react";
import * as SheetPrimitive from "@radix-ui/react-dialog";
import { cva, type VariantProps } from "class-variance-authority";
import { X } from "lucide-react";

import { cn } from "@/lib/utils";

const Sheet = SheetPrimitive.Root;

const SheetTrigger = SheetPrimitive.Trigger;

const SheetClose = SheetPrimitive.Close;

const SheetPortal = SheetPrimitive.Portal;

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/50 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className,
    )}
    {...props}
    ref={ref}
  />
));
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName;

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  },
);

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      {/* <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close> */}
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
));
SheetContent.displayName = SheetPrimitive.Content.displayName;

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className,
    )}
    {...props}
  />
);
SheetHeader.displayName = "SheetHeader";

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className,
    )}
    {...props}
  />
);
SheetFooter.displayName = "SheetFooter";

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
));
SheetTitle.displayName = SheetPrimitive.Title.displayName;

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
SheetDescription.displayName = SheetPrimitive.Description.displayName;

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
  SheetPrimitive,
};


[skeleton.tsx]: ./src\components\ui\skeleton.tsx
import { cn } from "@/lib/utils"

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-primary/10", className)}
      {...props}
    />
  )
}

export { Skeleton }


[sonner.tsx]: ./src\components\ui\sonner.tsx
import { useTheme } from "next-themes"
import { Toaster as Sonner } from "sonner"

type ToasterProps = React.ComponentProps<typeof Sonner>

const Toaster = ({ ...props }: ToasterProps) => {
  const { theme = "system" } = useTheme()

  return (
    <Sonner
      theme={theme as ToasterProps["theme"]}
      className="toaster group"
      toastOptions={{
        classNames: {
          toast:
            "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton:
            "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton:
            "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground",
        },
      }}
      {...props}
    />
  )
}

export { Toaster }


[Label.tsx]: ./src\components\Label.tsx
import { cn } from "@/lib/utils";

interface LabelProps {
  className?: string;
  icon: React.ReactNode;
  title: string;
}

export const Label = ({ className, icon, title }: LabelProps) => {
  return (
    <div
      className={cn(
        "flex w-fit items-center gap-2 rounded-full bg-white/10 p-1.5 px-4 transition-colors duration-200 ease-in hover:bg-white/25",
        className,
      )}
    >
      {icon}
      <h1 className="hidden font-medium sm:block">{title}</h1>
    </div>
  );
};


[PlaylistItem.tsx]: ./src\components\PlaylistItem.tsx
import { cn } from "@/lib/utils";
import { LockIcon, Play } from "lucide-react";
import { Link } from "react-router-dom";
import { PlaylistIcon } from "./icon";

interface PlaylistItemProps {
  id: string;
  title: string;
  channelTitle: string;
  thumbnails: string;
  videoCount: number;
  className?: string;
  isPrivate?: boolean;
}

const PlaylistItem = ({
  id,
  title,
  channelTitle,
  thumbnails,
  videoCount,
  className,
  isPrivate,
}: PlaylistItemProps) => {
  return (
    <Link
      to={`/playlists/${id}`}
      onClick={(e) => isPrivate && e.preventDefault()}
      className={cn("block", className, {
        "cursor-not-allowed": isPrivate,
      })}
    >
      <div className="group relative">
        <div className="rounded-lg bg-background">
          <img
            src={thumbnails}
            alt={title}
            className="h-44 w-full rounded-lg object-cover group-hover:opacity-40"
          />
          <div className="absolute bottom-0 right-0 m-2 rounded bg-black/40 px-2 py-1">
            <p className="flex items-center gap-1 text-xs text-white">
              <PlaylistIcon className="h-4 w-4" />
              {videoCount} video
            </p>
          </div>
          <div className="absolute inset-0 flex items-center justify-center">
            <Play className="hidden group-hover:block" />
          </div>
        </div>
        <div className="absolute -top-2 left-3 -z-10 h-5 w-[90%] rounded-3xl bg-gray-500/80" />
        <div className="absolute -top-1 left-1.5 -z-10 h-5 w-[95%] rounded-3xl bg-gray-400/90" />
      </div>
      <div className="mt-3">
        <h3 className="line-clamp-2 font-medium text-white">{title}</h3>
        {isPrivate && (
          <div className="flex items-center gap-2 text-muted-foreground">
            <LockIcon className="h-4 w-4" />
            <span className="font-medium">RiÃªng tÆ°</span>
          </div>
        )}
        <p className="mt-1 text-sm text-muted-foreground">{channelTitle}</p>
        <p className="text-sm font-medium text-muted-foreground">
          Xem danh sÃ¡ch phÃ¡t Ä‘áº§y Ä‘á»§
        </p>
      </div>
    </Link>
  );
};

export default PlaylistItem;


[SearchBar.tsx]: ./src\components\SearchBar.tsx
import { SearchIcon } from "@/components/icon";
import { useNavigate, useSearchParams } from "react-router-dom";
import { useEffect, useState } from "react";

export const SearchBar = () => {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const [searchQuery, setSearchQuery] = useState("");

  useEffect(() => {
    const query = searchParams.get("q");
    setSearchQuery(query || "");
  }, [searchParams]);

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    if (searchQuery.trim()) {
      navigate(`/search?q=${encodeURIComponent(searchQuery.trim())}`);
    }
  };

  return (
    <form
      onSubmit={handleSubmit}
      className="flex w-full max-w-[600px] items-center"
    >
      <input
        type="text"
        value={searchQuery}
        onChange={(e) => setSearchQuery(e.target.value)}
        placeholder="TÃ¬m kiáº¿m"
        className="h-10 w-full rounded-l-full border border-white/10 bg-transparent px-4 outline-none focus:border-blue-500"
      />
      <button
        type="submit"
        className="border-l-1 flex h-10 items-center rounded-r-full border border-white/10 bg-white/10 px-6 hover:bg-white/20"
      >
        <SearchIcon />
      </button>
    </form>
  );
};


[Sidebar.tsx]: ./src\components\Sidebar.tsx
import { Link } from "react-router-dom";

import { cn } from "@/lib/utils";

interface SidebarItemProps {
  title: string;
  url: string;
  icon: React.ReactNode;
  className?: string;
}

interface SidebarGroupProps {
  className?: string;
  children: React.ReactNode;
}

const SidebarGroup = ({ children, className }: SidebarGroupProps) => {
  return (
    <div className={cn("border-b border-white/20 py-3", className)}>
      {children}
    </div>
  );
};

const SidebarItem = ({ title, url, icon, className }: SidebarItemProps) => {
  return (
    <Link
      to={url}
      className={cn(
        "flex items-center gap-4 rounded-lg p-2 text-sm hover:bg-white/20",
        className,
      )}
    >
      {icon}
      <h1>{title}</h1>
    </Link>
  );
};

export { SidebarGroup, SidebarItem };


[VideoItem.tsx]: ./src\components\VideoItem.tsx
import moment from "moment";
import { Link } from "react-router-dom";
import { useQuery } from "@tanstack/react-query";

import { Skeleton } from "@/components/ui/skeleton";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { cn, convertISO8601ToHHMMSS, formatViewCount } from "@/lib/utils";

interface VideoItemProps {
  id: string;
  fullText?: boolean;
  channelId: string;
  thumbnail: string;
  title: string;
  channelTitle: string;
  viewCount: number;
  duration: string;
  publishedAt: string;
  className?: string;
}

export const VideoItem = ({
  id,
  thumbnail,
  fullText = false,
  title,
  channelTitle,
  viewCount,
  duration,
  publishedAt,
  className,
  channelId
}: VideoItemProps) => {

  const { data: channelData } = useQuery({
    queryKey: ["channel", channelId],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/channels?part=snippet&id=${channelId}&key=${import.meta.env.VITE_API_KEY}`
      );
      const data = await response.json();
      return data.items[0];
    },
    staleTime: 30 * 60 * 1000,
  });

  const avatarUrl = channelData?.snippet?.thumbnails?.default?.url;
  const fallbackText = channelData?.snippet?.title.charAt(0) || channelTitle.charAt(0);

  return (
    <Link to={`/watch/${id}`} className={cn("cursor-pointer", className)}>
      <div className="relative overflow-hidden rounded-md">
        <img
          src={thumbnail}
          alt={title}
          className="h-56 w-full rounded-md object-cover transition-all duration-150 ease-in hover:scale-105"
        />
        {duration && (
          <span className="absolute bottom-2 right-2 rounded-sm bg-black/40 px-1 py-[2px] text-xs">
            {convertISO8601ToHHMMSS(duration)}
          </span>
        )}
      </div>
      <div className="my-2 flex items-start gap-3">
        <Link
          to={`/chanel/${channelId}`}
          onClick={(e) => {
            e.stopPropagation();
            e.preventDefault();
            window.location.href = `/chanel/${channelId}`;
          }}
        >
          <Avatar className="relative flex shrink-0 overflow-hidden rounded-full h-9 w-9 ">
            <AvatarImage
              src={avatarUrl}
              alt={`${channelTitle} avatar`}
              className=" object-cover"
            />
            <AvatarFallback>{fallbackText}</AvatarFallback>
          </Avatar>

        </Link>
        <div>
          <h1 className="font-medium">
            {!fullText
              ? title.length > 50
                ? title.slice(0, 47) + "..."
                : title
              : title}
          </h1>
          <p className="text-sm text-muted-foreground">{channelTitle}</p>
          <div className="flex items-center gap-1 text-sm text-muted-foreground">
            {viewCount && (
              <div className="flex items-center gap-1">
                <span>{formatViewCount(viewCount)}</span>
                <span>â€¢</span>
              </div>
            )}
            <span>{moment(publishedAt).fromNow()}</span>
          </div>
        </div>
      </div>
    </Link>
  );
};

VideoItem.Skeleton = ({ layout = "vertical" }: { layout?: "vertical" | "horizontal" }) => {
  return (
    <div className={cn("", { "grid grid-cols-2 gap-2": layout === "horizontal" })}>
      <Skeleton className={cn("min-h-40 w-full", { "h-60": layout === "horizontal" })} />
      <div className={cn("my-2 flex gap-2", { "m-0": layout === "horizontal" })}>
        {layout === "vertical" && <Skeleton className="h-10 w-10 rounded-full" />}
        <div className="flex-1">
          <Skeleton className="h-5" />
          <Skeleton className="mt-2 h-3" />
        </div>
      </div>
    </div>
  );
};


[index.ts]: ./src\constants\index.ts
export const categories = [
  {
    title: "Táº¥t cáº£",
    url: "/",
    isActive: true,
    categoryId: "",
  },
  {
    title: "Ã‚m nháº¡c",
    url: "?category=10",
    isActive: false,
    categoryId: "10",
  },
  {
    title: "TrÃ² chÆ¡i",
    url: "?category=20",
    isActive: false,
    categoryId: "20",
  },
  {
    title: "Thá»ƒ thao",
    url: "?category=17",
    isActive: false,
    categoryId: "17",
  },
  {
    title: "Tin tá»©c",
    url: "?category=25",
    isActive: false,
    categoryId: "25",
  },
  {
    title: "GiÃ¡o dá»¥c",
    url: "?category=27",
    isActive: false,
    categoryId: "27",
  },
  {
    title: "Giáº£i trÃ­",
    url: "?category=24",
    isActive: false,
    categoryId: "24",
  },
  {
    title: "Phim & Hoáº¡t hÃ¬nh",
    url: "?category=1",
    isActive: false,
    categoryId: "1",
  },
];

export const playlists = {
  kind: "youtube#playlistListResponse",
  etag: "URxjObgzz_OPeIm5yocySdBb-W8",
  pageInfo: {
    totalResults: 12,
    resultsPerPage: 25,
  },
  items: [
    {
      kind: "youtube#playlist",
      etag: "0b5Q2JO6ibZUZDfY8FZ9K8wpbik",
      id: "PLAbgPFlKw684sPZ-4hYGCJ8vH8JBSauca",
      snippet: {
        publishedAt: "2024-04-30T10:50:48.613144Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "MERN APP",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/Kkht2mwSL_I/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/Kkht2mwSL_I/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/Kkht2mwSL_I/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/Kkht2mwSL_I/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/Kkht2mwSL_I/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "MERN APP",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 1,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "FvZ84_zo38AJNcCTPsepP7hqjZE",
      id: "PLAbgPFlKw684A2SicQoDnPbzQMivYLxMX",
      snippet: {
        publishedAt: "2024-04-22T17:09:11.553656Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "Tailwind",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/Rgvec9UA2_I/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/Rgvec9UA2_I/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/Rgvec9UA2_I/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/Rgvec9UA2_I/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/Rgvec9UA2_I/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "Tailwind",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 3,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "8v8u3vMHTI256LLk_UpwqL2cSd8",
      id: "PLAbgPFlKw684CSlouzhyJ_hjryFC0RsHl",
      snippet: {
        publishedAt: "2024-04-17T10:37:21.393854Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "Firebase",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/b0_Y_eU_SXI/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/b0_Y_eU_SXI/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/b0_Y_eU_SXI/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/b0_Y_eU_SXI/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/b0_Y_eU_SXI/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "Firebase",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 2,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "pbiH_y0gnHMCmaB-buYeqF0BupQ",
      id: "PLAbgPFlKw687-M_zL9MH_Uey7DnL2Of0X",
      snippet: {
        publishedAt: "2024-04-07T04:07:32.876533Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "Antd",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/QGV0lLvAV2E/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/QGV0lLvAV2E/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/QGV0lLvAV2E/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/QGV0lLvAV2E/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/QGV0lLvAV2E/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "Antd",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 1,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "-ZewOPjh8INskq_70bvpio6aTrg",
      id: "PLAbgPFlKw6854_dlhTDm4PF3jIT5vqXrk",
      snippet: {
        publishedAt: "2024-04-03T16:07:55.896727Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "Redux",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/DYtYyFOfpBY/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/DYtYyFOfpBY/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/DYtYyFOfpBY/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/DYtYyFOfpBY/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/DYtYyFOfpBY/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "Redux",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 4,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "-sfB-7g0lRgYqbVK-9l1bsGaDD0",
      id: "PLAbgPFlKw686QoaKnGbgu1ru9y7Q-jRBc",
      snippet: {
        publishedAt: "2024-03-24T07:49:09.465286Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "ReactJS Projects Must Do",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/img/no_thumbnail.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/img/no_thumbnail.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/img/no_thumbnail.jpg",
            width: 480,
            height: 360,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "ReactJS Projects Must Do",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 0,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "vQWbQuDfsp8kPNnr0l0o0QywfGA",
      id: "PLAbgPFlKw686kpoeD65ebzWFghu3H60nh",
      snippet: {
        publishedAt: "2024-03-24T06:14:19.90743Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "API Project",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/A6g8xc0MoiY/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/A6g8xc0MoiY/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/A6g8xc0MoiY/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/A6g8xc0MoiY/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/A6g8xc0MoiY/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "API Project",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 1,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "aqzCN9peNDpgND4tyTENLqi2vhQ",
      id: "PLAbgPFlKw685kLdf6yvzK0XU-2qqbglZQ",
      snippet: {
        publishedAt: "2024-02-22T07:50:22.99974Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "Bootstrap 5",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/oF28ns9eVdc/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/oF28ns9eVdc/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/oF28ns9eVdc/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/oF28ns9eVdc/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/oF28ns9eVdc/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "Bootstrap 5",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 4,
      },
    },
    {
      kind: "youtube#playlist",
      etag: "Um9dY8iSDQEQPaGsdo2Ct-gCKgk",
      id: "PLAbgPFlKw686EvLczanGs0AHx0iPiWNeL",
      snippet: {
        publishedAt: "2024-02-21T04:01:10.886446Z",
        channelId: "UC2iV5b_kh_ABMT7BoCzI5Bw",
        title: "ReactJS",
        description: "",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/zmhHEjKxo1Q/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/zmhHEjKxo1Q/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/zmhHEjKxo1Q/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/zmhHEjKxo1Q/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/zmhHEjKxo1Q/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "DÅ©ng Äá»—",
        localized: {
          title: "ReactJS",
          description: "",
        },
      },
      contentDetails: {
        itemCount: 3,
      },
    },
  ],
};

export const playlistItems = {
  kind: "youtube#playlistItemListResponse",
  etag: "f5N348O4DVzls_tTsfefR3eFQsA",
  items: [
    {
      kind: "youtube#playlistItem",
      etag: "SDjzFPiPJjjzEMpjqhdv0b-id98",
      id: "UExNd0NGcjROcWdNcmF6M0VfU3hvUzdmVEp1NlVBcXRDay4yODlGNEE0NkRGMEEzMEQy",
      snippet: {
        publishedAt: "2024-10-10T14:15:34Z",
        channelId: "UCW_4e6sUTMWHxlF06aErH9w",
        title:
          "Build a Jira Clone With Nextjs, React, Tailwind, Hono.js | Part 1/2 (2024)",
        description:
          'â­ Source code & more: https://dub.sh/twpYBjw\nðŸ”¥ Get $50 in Appwrite credits: https://apwr.dev/antonio50\nðŸŽ¬ PART 2: https://youtu.be/37v63U7-iG0?si=ZkY7-7vtInUMdlrk\n\nHi all ðŸ‘‹ In this 16-hour tutorial split in two parts (my longest ever btw!) you will learn how to create an end-to-end fullstack Jira clone, all with workspaces, project / epics, tasks, kanban boards, calendars, editing and deleting tasks, invite system, role-based access control system, image uploads, analytics, authentication and more!\n\nKey Features:\nðŸ¢ Workspaces\nðŸ“Š Projects / Epics\nâœ… Tasks\nðŸ“‹ Kanban Board View\nðŸ—ƒï¸ Data Table View\nðŸ“… Calendar View\nâœ‰ï¸ Invite System\nâš™ï¸ Workspace and Project Settings\nðŸ–¼ï¸ Image Uploads (for avatars and attachments)\nðŸ”Œ Appwrite SDK Integration\nâš›ï¸ Next.js 14 Framework\nðŸŽ¨ Shadcn UI & TailwindCSS Styling\nðŸ” Advanced Search and Filtering\nðŸ“ˆ Analytics Dashboard\nðŸ‘¥ User Roles and Permissions\nðŸ”’ Authentication (OAuth and Email)\nðŸ“± Responsive Design (Mobile-friendly)\nðŸš€ API using Hono.js\n\nTimestamps\n00:00 Intro & demo\n03:29 Project setup\n09:25 Adding a component library\n21:41 Customizing components\n34:02 Resolving lint errors\n39:12 Creating auth screens\n01:34:17 Setting up Hono API\n01:48:11 Creating auth API\n02:21:49 Setting up Appwrite & database\n02:51:10 Building a session middleware\n03:12:58 Learning how to protect routes\n03:45:28 Building a dashboard layout\n04:07:02 Building a workspace form \n04:37:36 Handling image upload\n05:04:37 Creating a workspace switcher\n05:22:36 Creating workspace members\n05:38:45 Building a responsive modal\n06:11:44 Building a standalone layout\n06:22:51 Building workspace settings\n07:02:38 Refactoring server queries\n07:12:03 Adding a "delete" functionality\n07:35:03 Adding a "reset invite" functionality\n07:47:03 Building the invite system\n08:10:05 Adding a "delete" functionality',
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/Av9C7xlV0fA/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/Av9C7xlV0fA/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/Av9C7xlV0fA/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/Av9C7xlV0fA/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/Av9C7xlV0fA/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "Code With Antonio",
        playlistId: "PLMwCFr4NqgMraz3E_SxoS7fTJu6UAqtCk",
        position: 0,
        resourceId: {
          kind: "youtube#video",
          videoId: "Av9C7xlV0fA",
        },
        videoOwnerChannelTitle: "Code With Antonio",
        videoOwnerChannelId: "UCW_4e6sUTMWHxlF06aErH9w",
      },
      contentDetails: {
        videoId: "Av9C7xlV0fA",
        videoPublishedAt: "2024-10-09T13:02:08Z",
      },
    },
    {
      kind: "youtube#playlistItem",
      etag: "tHpQPsOwsJhrkOqbv5MBeuPbwZ8",
      id: "UExNd0NGcjROcWdNcmF6M0VfU3hvUzdmVEp1NlVBcXRDay41NkI0NEY2RDEwNTU3Q0M2",
      snippet: {
        publishedAt: "2024-10-10T14:15:25Z",
        channelId: "UCW_4e6sUTMWHxlF06aErH9w",
        title:
          "Build a Jira Clone With Nextjs, React, Tailwind, Hono.js | Part 2/2 (2024)",
        description:
          "â­ Source code & more: https://dub.sh/twpYBjw\nðŸ”¥ Get $50 in Appwrite credits: https://apwr.dev/antonio50\nðŸŽ¬ PART 1: https://youtu.be/Av9C7xlV0fA?si=EpjTfBp_jk1pQk0N\n\nHi all ðŸ‘‹ In this 16-hour tutorial split in two parts (my longest ever btw!) you will learn how to create an end-to-end fullstack Jira clone, all with workspaces, project / epics, tasks, kanban boards, calendars, editing and deleting tasks, invite system, role-based access control system, image uploads, analytics, authentication and more!\n\nKey Features:\nðŸ¢ Workspaces\nðŸ“Š Projects / Epics\nâœ… Tasks\nðŸ“‹ Kanban Board View\nðŸ—ƒï¸ Data Table View\nðŸ“… Calendar View\nâœ‰ï¸ Invite System\nâš™ï¸ Workspace and Project Settings\nðŸ–¼ï¸ Image Uploads (for avatars and attachments)\nðŸ”Œ Appwrite SDK Integration\nâš›ï¸ Next.js 14 Framework\nðŸŽ¨ Shadcn UI & TailwindCSS Styling\nðŸ” Advanced Search and Filtering\nðŸ“ˆ Analytics Dashboard\nðŸ‘¥ User Roles and Permissions\nðŸ”’ Authentication (OAuth and Email)\nðŸ“± Responsive Design (Mobile-friendly)\nðŸš€ API using Hono.js\n\nTimestamps\n00:00 Intro & demo\n00:33 Adding workspace projects\n35:01 Building project settings\n01:15:05 Building a tasks API\n01:43:58 Building a task form\n02:11:15 Building data filters\n02:38:40 Building a data table\n03:07:52 Adding task settings\n03:32:45 Building a data kanban\n03:48:24 Adding a kanban update API\n04:31:39 Building a data calendar\n05:03:01 Adding a task page\n05:38:06 Refactoring server components \n06:08:12 Building project analytics\n06:36:47 Building workspace analytics\n07:03:09 Resolving build errors\n07:13:36 Implementing OAuth login\n07:29:41 Deployment\n07:37:17 Resolving leftover bugs",
        thumbnails: {
          default: {
            url: "https://i.ytimg.com/vi/37v63U7-iG0/default.jpg",
            width: 120,
            height: 90,
          },
          medium: {
            url: "https://i.ytimg.com/vi/37v63U7-iG0/mqdefault.jpg",
            width: 320,
            height: 180,
          },
          high: {
            url: "https://i.ytimg.com/vi/37v63U7-iG0/hqdefault.jpg",
            width: 480,
            height: 360,
          },
          standard: {
            url: "https://i.ytimg.com/vi/37v63U7-iG0/sddefault.jpg",
            width: 640,
            height: 480,
          },
          maxres: {
            url: "https://i.ytimg.com/vi/37v63U7-iG0/maxresdefault.jpg",
            width: 1280,
            height: 720,
          },
        },
        channelTitle: "Code With Antonio",
        playlistId: "PLMwCFr4NqgMraz3E_SxoS7fTJu6UAqtCk",
        position: 1,
        resourceId: {
          kind: "youtube#video",
          videoId: "37v63U7-iG0",
        },
        videoOwnerChannelTitle: "Code With Antonio",
        videoOwnerChannelId: "UCW_4e6sUTMWHxlF06aErH9w",
      },
      contentDetails: {
        videoId: "37v63U7-iG0",
        videoPublishedAt: "2024-10-10T14:11:12Z",
      },
    },
  ],
  pageInfo: {
    totalResults: 2,
    resultsPerPage: 20,
  },
};


[AuthContext.tsx]: ./src\contexts\AuthContext.tsx
import {
  getGoogleAuthUrl,
} from "@/services/auth.service";
import { createContext, useContext, useState, useEffect } from "react";

interface AuthContextType {
  accessToken: string | null;
  login: () => void;
  logout: () => void;
}

const AuthContext = createContext<AuthContextType | null>(null);

export const AuthProvider = ({ children }: { children: React.ReactNode }) => {
  const [accessToken, setAccessToken] = useState<string | null>(
    localStorage.getItem("youtube_access_token"),
  );

  const login = () => {
    const authUrl = getGoogleAuthUrl();
    window.location.href = authUrl;
  };

  const logout = () => {
    localStorage.removeItem("youtube_access_token");
    setAccessToken(null);
  };

  useEffect(() => {
    const hashParams = new URLSearchParams(window.location.hash.substring(1));
    const token = hashParams.get("access_token");

    if (token) {
      localStorage.setItem("youtube_access_token", token);
      setAccessToken(token);
      window.history.replaceState(null, "", window.location.pathname);
    }
  }, []);

  return (
    <AuthContext.Provider value={{ accessToken, login, logout }}>
      {children}
    </AuthContext.Provider>
  );
};

export const useAuth = () => {
  const context = useContext(AuthContext);
  if (!context) {
    throw new Error("useAuth must be used within an AuthProvider");
  }
  return context;
};


[query-provider.tsx]: ./src\contexts\query-provider.tsx
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";

interface QueryProviderProps {
  children: React.ReactNode;
}

const QueryProvider = ({ children }: QueryProviderProps) => {
  const queryClient = new QueryClient({
    defaultOptions: {
      queries: {
        refetchOnWindowFocus: false,
        retry: false,
        staleTime: 5 * 60 * 1000,
        gcTime: 30 * 60 * 1000,
        retryDelay: 0,
      },
    },
  });
  return (
    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>
  );
};

export default QueryProvider;


[Categories.tsx]: ./src\layouts\components\Categories.tsx
import { Link, useSearchParams } from "react-router-dom";

import { cn } from "@/lib/utils";
import { categories } from "@/constants";

interface CategoriesProps {
  className?: string;
}

export const Categories = ({ className }: CategoriesProps) => {
  const [searchParams] = useSearchParams();
  const currentCategory = searchParams.get("category") || "";

  return (
    <div className={cn("flex min-h-14 items-center gap-3", className)}>
      {categories.map((category) => (
        <Link
          className={cn("category", {
            "bg-white text-black":
              category.categoryId === currentCategory ||
              (category.categoryId === "" && currentCategory === ""),
          })}
          key={category.title}
          to={category.url}
        >
          {category.title}
        </Link>
      ))}
    </div>
  );
};


[Header.tsx]: ./src\layouts\components\Header.tsx
import { Link, useLocation } from "react-router-dom";
import { useMediaQuery } from "usehooks-ts";

import {
  AlignJustifyIcon,
  BellIcon,
  CameraIcon,
  YoutubeIcon,
} from "@/components/icon";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { MobileSidebar } from "./MobileSidebar";
import { SearchBar } from "@/components/SearchBar";

interface HeaderProps {
  onClick: () => void;
}

export const Header = ({ onClick }: HeaderProps) => {
  const isSmallScreen = useMediaQuery("(max-width: 640px)");

  const { pathname } = useLocation();

  const isWatchPage = pathname.split("/")[1] === "watch";

  return (
    <header className="sticky top-0 z-50 flex h-14 items-center justify-between bg-background px-4">
      <div className="flex items-center gap-4">
        {isSmallScreen || isWatchPage ? (
          <MobileSidebar />
        ) : (
          <div onClick={onClick}>
            <AlignJustifyIcon className="icon" />
          </div>
        )}
        <Link to="/">
          <YoutubeIcon />
        </Link>
      </div>

      <div className="hidden md:block md:min-w-[300px] lg:min-w-[500px]">
        <SearchBar />
      </div>

      <div className="flex items-center gap-2">
        <CameraIcon className="icon" />
        <Badge count={100}>
          <BellIcon className="icon" />
        </Badge>
        <Avatar className="ml-2 cursor-pointer">
          <AvatarImage src="https://lh3.googleusercontent.com/a/ACg8ocI-ANweFu2tNdY8eqic_0tC1CQ9FrhBaQQNcxVldQki6KQ63yKS=s360-c-no" />
          <AvatarFallback>D</AvatarFallback>
        </Avatar>
      </div>
    </header>
  );
};


[MobileSidebar.tsx]: ./src\layouts\components\MobileSidebar.tsx
import { AlignJustifyIcon, YoutubeIcon } from "@/components/icon";
import {
  Sheet,
  SheetContent,
  SheetPrimitive,
  SheetTrigger,
} from "@/components/ui/sheet";
import { Sidebar } from "./Sidebar";
import { Link } from "react-router-dom";

export const MobileSidebar = () => {
  return (
    <Sheet>
      <SheetTrigger>
        <AlignJustifyIcon className="icon" />
      </SheetTrigger>
      <SheetContent className="w-60 border-none p-0" side="left">
        <div className="mx-5 my-2 flex items-center gap-4">
          <SheetPrimitive.Close>
            <AlignJustifyIcon className="icon" />
          </SheetPrimitive.Close>
          <Link to="/">
            <YoutubeIcon />
          </Link>
        </div>
        <Sidebar className="top-0 h-full" />
      </SheetContent>
    </Sheet>
  );
};


[Sidebar.tsx]: ./src\layouts\components\Sidebar.tsx
import {
  ChannelsIcon,
  ClockIcon,
  CourseIcon,
  FlagIcon,
  HelpIcon,
  HistoryIcon,
  HomeIcon,
  LikeIcon,
  MyChannelIcon,
  PlaylistIcon,
  ReportIcon,
  SettingIcon,
  ShortVideoIcon,
  VideoIcon,
} from "@/components/icon";
import { SidebarGroup, SidebarItem } from "@/components/Sidebar";
import { cn } from "@/lib/utils";

const mainNav = {
  home: [
    {
      title: "Trang chá»§",
      url: "/",
      icon: HomeIcon,
    },
    {
      title: "Shorts",
      url: "#",
      icon: ShortVideoIcon,
    },
    {
      title: "KÃªnh Ä‘Äƒng kÃ½",
      url: "#",
      icon: ChannelsIcon,
    },
  ],
  activity: [
    {
      title: "KÃªnh cá»§a báº¡n",
      url: "#",
      icon: MyChannelIcon,
    },
    {
      title: "Video Ä‘Ã£ xem",
      url: "#",
      icon: HistoryIcon,
    },
    {
      title: "Danh sÃ¡ch phÃ¡t",
      url: "/feed/playlists",
      icon: PlaylistIcon,
    },
    {
      title: "Video cá»§a báº¡n",
      url: "#",
      icon: VideoIcon,
    },
    {
      title: "KhÃ³a há»c cá»§a báº¡n",
      url: "#",
      icon: CourseIcon,
    },
    {
      title: "Xem sau",
      url: "#",
      icon: ClockIcon,
    },
    {
      title: "Video Ä‘Ã£ thÃ­ch",
      url: "#",
      icon: LikeIcon,
    },
  ],
  action: [
    {
      title: "CÃ i Ä‘áº·t",
      url: "#",
      icon: SettingIcon,
    },
    {
      title: "Nháº­t kÃ½ bÃ¡o cÃ¡o",
      url: "#",
      icon: FlagIcon,
    },
    {
      title: "Trá»£ giÃºp",
      url: "#",
      icon: HelpIcon,
    },
    {
      title: "Gá»­i Ã½ kiáº¿n pháº£n há»“i",
      url: "#",
      icon: ReportIcon,
    },
  ],
};

interface SidebarProps {
  className?: string;
}

export const Sidebar = ({ className }: SidebarProps) => {
  return (
    <div
      className={cn(
        "sidebar sticky top-[56px] h-[calc(100vh-56px)] overflow-y-auto bg-background",
        className,
      )}
    >
      <div className="mx-5">
        <SidebarGroup>
          {mainNav.home.map((item) => (
            <SidebarItem
              key={item.title}
              title={item.title}
              url={item.url}
              icon={<item.icon />}
            />
          ))}
        </SidebarGroup>
        <SidebarGroup>
          {mainNav.activity.map((item) => (
            <SidebarItem
              key={item.title}
              title={item.title}
              url={item.url}
              icon={<item.icon />}
            />
          ))}
        </SidebarGroup>
        <SidebarGroup>
          {mainNav.action.map((item) => (
            <SidebarItem
              key={item.title}
              title={item.title}
              url={item.url}
              icon={<item.icon />}
            />
          ))}
        </SidebarGroup>
        <p className="my-2 text-center text-xs text-muted-foreground">
          &#169; 2025 Google LLC{" "}
        </p>
      </div>
    </div>
  );
};


[SmallSidebar.tsx]: ./src\layouts\components\SmallSidebar.tsx
import {
  ChannelsIcon,
  HomeIcon,
  ProfileIcon,
  ShortVideoIcon,
} from "@/components/icon";
import { SidebarGroup, SidebarItem } from "@/components/Sidebar";

const mainNav = [
  {
    title: "Trang chá»§",
    url: "/",
    icon: HomeIcon,
  },
  {
    title: "Shorts",
    url: "#",
    icon: ShortVideoIcon,
  },
  {
    title: "KÃªnh Ä‘Äƒng kÃ½",
    url: "#",
    icon: ChannelsIcon,
  },
  {
    title: "Báº¡n",
    url: "#",
    icon: ProfileIcon,
  },
];

export const SmallSidebar = () => {
  return (
    <div className="sidebar sticky top-[56px] h-[calc(100vh-56px)] overflow-y-auto bg-background">
      <div className="mx-2">
        <SidebarGroup className="border-none">
          {mainNav.map((item) => (
            <SidebarItem
              key={item.title}
              className="flex-col gap-2 text-center text-xs"
              title={item.title}
              url={item.url}
              icon={<item.icon />}
            />
          ))}
        </SidebarGroup>
      </div>
    </div>
  );
};


[MainLayout.tsx]: ./src\layouts\MainLayout.tsx
import { Outlet, useLocation } from "react-router-dom";
import { useLocalStorage, useMediaQuery } from "usehooks-ts";

import { Header } from "./components/Header";
import { Sidebar } from "./components/Sidebar";
import { SmallSidebar } from "./components/SmallSidebar";

import { cn } from "@/lib/utils";
import { useEffect } from "react";

const MainLayout = () => {
  const [isOpen, setIsOpen] = useLocalStorage("sidebar-open", true);
  const isMediumScreen = useMediaQuery("(max-width: 1024px)");
  const isSmallScreen = useMediaQuery("(max-width: 640px)");
  const { pathname } = useLocation();

  const isWatchPage = pathname.split("/")[1] === "watch";

  const toggleSidebar = () => {
    setIsOpen((prev) => !prev);
  };

  useEffect(() => {
    isMediumScreen ? setIsOpen(false) : setIsOpen(true);
  }, [isMediumScreen]);

  return (
    <main className="min-h-screen">
      <Header onClick={toggleSidebar} />
      <div
        className={cn("min-h-screen transition-all duration-150 ease-out", {
          "grid grid-cols-[250px_1fr]":
            isOpen && !isSmallScreen && !isWatchPage,
          "grid grid-cols-[120px_1fr]":
            !isOpen && !isSmallScreen && !isWatchPage,
        })}
      >
        {!isSmallScreen &&
          !isWatchPage &&
          (isOpen ? <Sidebar /> : <SmallSidebar />)}
        <div className="">
          <Outlet />
        </div>
      </div>
    </main>
  );
};

export default MainLayout;


[utils.ts]: ./src\lib\utils.ts
import { twMerge } from "tailwind-merge";
import { clsx, type ClassValue } from "clsx";
import { parse, toSeconds } from "iso8601-duration";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

export function convertISO8601ToHHMMSS(duration: string) {
  const parsed = parse(duration);

  const totalSeconds = toSeconds(parsed);

  const hours = Math.floor(totalSeconds / 3600);
  const minutes = Math.floor((totalSeconds % 3600) / 60);
  const seconds = totalSeconds % 60;

  return [
    hours.toString().padStart(2, "0"),
    minutes.toString().padStart(2, "0"),
    seconds.toString().padStart(2, "0"),
  ].join(":");
}

export function formatViewCount(views: number) {
  if (views >= 1_000_000) {
    return (
      new Intl.NumberFormat("en-US", {
        notation: "compact",
        maximumFractionDigits: 1,
      }).format(views) + " views"
    );
  }
  return new Intl.NumberFormat("en-US").format(views) + " views";
}

export function formatSubscribers(count: number) {
  if (count >= 1e9) {
    return (count / 1e9).toFixed(2).replace(/\.?0+$/, "") + " B subscribers";
  } else if (count >= 1e6) {
    return (count / 1e6).toFixed(2).replace(/\.?0+$/, "") + " M subscribers";
  } else if (count >= 1e3) {
    return (count / 1e3).toFixed(2).replace(/\.?0+$/, "") + " K subscribers";
  } else {
    return count + " subscribers";
  }
}


[DetailChanel.tsx]: ./src\pages\DetailChanel.tsx
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { useParams } from "react-router-dom";
import { useQuery } from "@tanstack/react-query";
import { toast } from "sonner";
import { formatSubscribers } from "@/lib/utils";
import { useState } from "react";
import { LoaderIcon, Search } from "lucide-react";
import { VideoItem } from "@/components/VideoItem";
import PlaylistItem from "@/components/PlaylistItem";

function DetailChanel() {
  const { chanelId } = useParams();
  const [activeTab, setActiveTab] = useState("home");

  const {
    data: channel,
    isLoading: isLoadingChannel,
    isError: isErrorChannel,
  } = useQuery({
    queryKey: ["channel", chanelId],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/channels?part=snippet,statistics,brandingSettings&id=${chanelId}&key=${import.meta.env.VITE_API_KEY}`,
      );
      const data = await response.json();
      return data.items[0];
    },
    staleTime: 30 * 60 * 1000,
  });
  const {
    data: videos,
    isLoading: isLoadingVideos,
    isError: isErrorVideos,
  } = useQuery({
    queryKey: ["channelVideos", chanelId],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/search?part=snippet&channelId=${chanelId}&maxResults=50&order=date&type=video&key=${import.meta.env.VITE_API_KEY}`,
      );
      const searchData = await response.json();

      // Fetch additional video details
      const videoIds = searchData.items
        .map((item: any) => item.id.videoId)
        .join(",");
      const videoDetailsResponse = await fetch(
        `${import.meta.env.VITE_API_URL}/videos?part=contentDetails,statistics&id=${videoIds}&key=${import.meta.env.VITE_API_KEY}`,
      );
      const videoDetailsData = await videoDetailsResponse.json();

      // Merge search results with video details
      return searchData.items.map((item: any, index: number) => ({
        ...item,
        contentDetails: videoDetailsData.items[index].contentDetails,
        statistics: videoDetailsData.items[index].statistics,
      }));
    },
    staleTime: 30 * 60 * 1000,
  });

  const {
    data: playlists,
    isLoading: isLoadingPlaylists,
    isError: isErrorPlaylists,
  } = useQuery({
    queryKey: ["channelPlaylists", chanelId],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/playlists?part=snippet,contentDetails&channelId=${chanelId}&maxResults=50&key=${import.meta.env.VITE_API_KEY}`,
      );
      const data = await response.json();
      return data;
    },
    staleTime: 30 * 60 * 1000,
  });

  if (isErrorChannel || isErrorVideos || isErrorPlaylists) {
    toast.error("ÄÃ£ xáº£y ra lá»—i khi táº£i thÃ´ng tin!");
  }

  if (isLoadingChannel || isLoadingVideos || isLoadingPlaylists) {
    return (
      <div className="flex h-screen items-center justify-center">
        <LoaderIcon className="h-10 w-10 animate-spin" />
      </div>
    );
  }

  const tabs = [
    { id: "home", label: "Trang chá»§" },
    { id: "videos", label: "Video" },
    { id: "shorts", label: "Shorts" },
    { id: "playlists", label: "Danh sÃ¡ch phÃ¡t" },
    { id: "posts", label: "BÃ i Ä‘Äƒng" },
  ];

  return (
    <div>
      <div className="relative w-full px-5 xl:px-20">
        <div className="aspect-[6/1] w-full overflow-hidden rounded-2xl">
          <img
            src={channel?.brandingSettings?.image?.bannerExternalUrl}
            alt="Channel Banner"
            className="h-full w-full bg-neutral-950 object-cover"
            onError={(e) => {
              const img = e.target as HTMLImageElement;
              img.style.display = "none";
            }}
          />
        </div>
      </div>
      <div className="mx-5 py-5 xl:mx-20">
        <div className="flex items-start gap-4">
          <Avatar className="h-36 w-36">
            <AvatarImage
              src={
                channel?.snippet.thumbnails?.high?.url ||
                channel?.snippet.thumbnails?.default?.url
              }
            />
            <AvatarFallback>{channel?.snippet.title.charAt(0)}</AvatarFallback>
          </Avatar>
          <div className="flex flex-col gap-2">
            <div className="flex items-center gap-2">
              <h1 className="text-2xl font-medium">{channel?.snippet.title}</h1>
            </div>
            <div className="flex flex-col text-sm text-muted-foreground">
              <span>{channel?.snippet.customUrl}</span>
              <span>
                {channel
                  ? formatSubscribers(channel?.statistics.subscriberCount)
                  : ""}{" "}
                ngÆ°á»i Ä‘Äƒng kÃ½ â€¢ {channel?.statistics.videoCount} video
              </span>
              <span className="line-clamp-1">
                {channel?.snippet.description}
              </span>
              <div className="inline-flex items-center space-x-1">
                <a
                  href={channel?.snippet.customUrl}
                  className="text-[rgb(62,166,255)]"
                >
                  {channel?.snippet.customUrl}
                </a>

                <span className="text-white no-underline">
                  vÃ  {channel?.statistics.videoCount} Ä‘Æ°á»ng liÃªn káº¿t khÃ¡c
                </span>
              </div>
            </div>
            <button className="mt-2 h-9 w-fit rounded-full border border-gray-300 bg-white px-4 text-sm leading-9 text-black transition-colors hover:bg-gray-100">
              ÄÄƒng kÃ½
            </button>
          </div>
        </div>

        <div className="mt-8">
          <div className="flex items-center gap-4 border-b border-gray-700 pb-3">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`bg-transparent px-4 py-1 text-sm transition-colors ${
                  activeTab === tab.id
                    ? "border-b-2 border-white font-medium text-white"
                    : "text-muted-foreground hover:text-white"
                }`}
              >
                {tab.label}
              </button>
            ))}
            <button className="text-muted-foreground hover:text-white">
              <Search className="h-5 w-5" />
            </button>
          </div>

          <div className="mt-6 grid grid-cols-1 gap-4 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
            {(activeTab === "videos" || activeTab === "home") &&
              videos?.map((video: any) => (
                <VideoItem
                  key={video.id.videoId}
                  id={video.id.videoId}
                  thumbnail={video.snippet.thumbnails.high.url}
                  title={video.snippet.title}
                  channelId={video.snippet.channelId}
                  channelTitle={video.snippet.channelTitle}
                  publishedAt={video.snippet.publishedAt}
                  viewCount={parseInt(video.statistics.viewCount)}
                  duration={video.contentDetails.duration}
                />
              ))}

            {activeTab === "playlists" &&
              playlists?.items?.map((playlist: any) => (
                <PlaylistItem
                  key={playlist.id}
                  id={playlist.id}
                  title={playlist.snippet.title}
                  channelTitle={playlist.snippet.channelTitle}
                  thumbnails={
                    playlist.snippet.thumbnails?.maxres?.url ||
                    playlist.snippet.thumbnails?.default?.url
                  }
                  videoCount={playlist.contentDetails.itemCount}
                />
              ))}
          </div>
        </div>
      </div>
    </div>
  );
}

export default DetailChanel;


[DetailVideo.tsx]: ./src\pages\DetailVideo.tsx
import { DownloadIcon, EllipsisIcon, ShareIcon } from "@/components/icon";
import { Label } from "@/components/Label";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";
import { Skeleton } from "@/components/ui/skeleton";
import { VideoItem } from "@/components/VideoItem";
import { Categories } from "@/layouts/components/Categories";
import { formatSubscribers } from "@/lib/utils";
import { AvatarImage } from "@radix-ui/react-avatar";
import { useEffect } from "react";
import { useParams } from "react-router-dom";
import { toast } from "sonner";
import { useQuery } from "@tanstack/react-query";

const DetailVideo = () => {
  const { videoId } = useParams();

  const {
    data: video,
    isLoading,
    isError,
  } = useQuery({
    queryKey: ["video", videoId],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/videos?part=snippet,contentDetails,statistics&id=${videoId}&key=${import.meta.env.VITE_API_KEY}`,
      );
      const data = await response.json();
      return data.items[0];
    },
    staleTime: 30 * 60 * 1000,
  });

  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  if (isError) {
    toast.error("ÄÃ£ xáº£y ra lá»—i khi táº£i video!");
  }

  if (isLoading) {
    return (
      <div className="mx-5 py-5 xl:mx-20">
        <div className="grid gap-5 lg:grid-cols-[1fr_450px]">
          <div className="">
            <Skeleton className="min-h-[300px] w-full rounded-lg md:min-h-[400px] xl:h-[600px]" />
            <div className="my-4 flex flex-col gap-4">
              <Skeleton className="h-10 w-full" />
              <div className="flex items-center justify-between">
                <div className="flex items-center gap-3">
                  <Skeleton className="h-10 w-10 rounded-full" />
                  <div className="flex flex-col gap-2">
                    <Skeleton className="h-4 w-40" />
                    <Skeleton className="h-2 w-20" />
                  </div>
                </div>
                <div className="flex items-center gap-2">
                  <Skeleton className="h-10 w-20 rounded-full" />
                  <Skeleton className="h-10 w-20 rounded-full" />
                  <Skeleton className="h-10 w-10 rounded-full" />
                </div>
              </div>
              <Skeleton className="h-60 w-full" />
            </div>
          </div>
          <div className="space-y-4">
            <Categories className="categories min-h-fit flex-nowrap overflow-x-auto" />
            {[...Array(5)].map((_, i) => (
              <VideoItem.Skeleton key={i} layout="horizontal" />
            ))}
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="mx-5 py-5 xl:mx-20">
      <div className="grid gap-5 lg:grid-cols-[1fr_450px]">
        <div className="">
          <img
            src={video?.snippet.thumbnails?.maxres?.url || video?.snippet.thumbnails?.default?.url}
            alt=""
            className="min-h-[300px] w-full rounded-lg object-cover md:min-h-[400px] xl:h-[600px]"
          />
          <div className="my-4 flex flex-col gap-4">
            <h1 className="text-xl font-medium">{video?.snippet.title}</h1>
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                <Avatar className="h-10 w-10">
                  <AvatarImage src={video?.avatar} />
                  <AvatarFallback>N</AvatarFallback>
                </Avatar>
                <div className="">
                  <h1 className="font-medium">{video?.snippet.channelTitle}</h1>
                  <p className="text-xs text-muted-foreground">
                    {video ? formatSubscribers(video?.subscribers) : ""}
                  </p>
                </div>
              </div>
              <div className="flex items-center gap-2">
                <Label icon={<ShareIcon />} title="Share" />
                <Label icon={<DownloadIcon />} title="Download" />
                <EllipsisIcon className="icon bg-white/10 hover:bg-white/25" />
              </div>
            </div>
            <div className="rounded-lg bg-white/20 p-3 text-sm">
              Descriptions
            </div>
          </div>
        </div>
        <div className="">
          <Categories className="categories min-h-fit flex-nowrap overflow-x-auto" />
          <div className="my-4 space-y-4"></div>
        </div>
      </div>
    </div>
  );
};

export default DetailVideo;


[ListVideos.tsx]: ./src\pages\ListVideos.tsx
import { useCallback } from "react";
import { useInfiniteQuery } from "@tanstack/react-query";
import { useSearchParams } from "react-router-dom";

import { toast } from "sonner";

import { VideoItem } from "@/components/VideoItem";
import { Categories } from "@/layouts/components/Categories";

const ListVideos = () => {
  const [searchParams] = useSearchParams();
  const categoryId = searchParams.get("category") || "";

  const { data, fetchNextPage, hasNextPage, isFetching, isError } =
    useInfiniteQuery({
      queryKey: ["videos", categoryId],
      initialPageParam: "",
      queryFn: async ({ pageParam = "" }) => {
        const categoryParam = categoryId
          ? `&videoCategoryId=${categoryId}`
          : "";
        const response = await fetch(
          `${import.meta.env.VITE_API_URL}/videos?part=snippet,contentDetails,statistics&chart=mostPopular&regionCode=VN&maxResults=20${categoryParam}&pageToken=${pageParam}&key=${import.meta.env.VITE_API_KEY}`,
        );
        return response.json();
      },
      getNextPageParam: (lastPage) => {
        return lastPage.items?.length > 0 ? lastPage.nextPageToken : undefined;
      },
    });

  const observerRef = useCallback(
    (node: HTMLDivElement | null) => {
      if (!node) return;

      const observer = new IntersectionObserver(
        (entries) => {
          if (entries[0].isIntersecting && hasNextPage && !isFetching) {
            fetchNextPage();
          }
        },
        { threshold: 0.5 },
      );

      observer.observe(node);
      return () => observer.disconnect();
    },
    [hasNextPage, isFetching, fetchNextPage],
  );

  const videos = data?.pages.flatMap((page) => page.items) ?? [];

  if (isError) {
    toast.error("ÄÃ£ xáº£y ra lá»—i khi táº£i video!");
  }

  return (
    <div className="">
      <Categories className="categories sticky top-[56px] z-10 mx-5 flex-nowrap overflow-x-auto bg-background" />
      <div className="m-5 my-0 mt-3 grid gap-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        {videos.map((video: any) => (
          <VideoItem
            key={video.id}
            thumbnail={
              video.snippet.thumbnails?.maxres?.url ||
              video.snippet.thumbnails?.standard?.url
            }
            title={video.snippet.title}
            channelId={video.snippet.channelId}
            id={video.id}
            channelTitle={video.snippet.channelTitle}
            viewCount={video.statistics.viewCount}
            duration={video.contentDetails.duration}
            publishedAt={video.snippet.publishedAt}
            className="md:[&_img]:h-40"
          />
        ))}
      </div>

      {isFetching && (
        <div className="grid gap-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
          {[...Array(4)].map((_, i) => (
            <VideoItem.Skeleton key={i} />
          ))}
        </div>
      )}

      {hasNextPage && <div ref={observerRef} style={{ height: "20px" }} />}

      {!hasNextPage && videos.length > 0 && (
        <p className="my-4 text-center text-muted-foreground">
          KhÃ´ng cÃ²n video Ä‘á»ƒ hiá»ƒn thá»‹
        </p>
      )}
    </div>
  );
};

export default ListVideos;


[NotFound.tsx]: ./src\pages\NotFound.tsx
import { YoutubeIcon } from "@/components/icon";
import { Button } from "@/components/ui/button";
import { Link } from "react-router-dom";

const NotFound = () => {
  return (
    <div className="flex h-[calc(100vh-56px)] w-full flex-col items-center justify-center">
      <div className="mb-4 flex items-center justify-center gap-2">
        <YoutubeIcon />
        <h1 className="border-l-2 p-4 text-4xl font-medium">Not Found</h1>
      </div>
      <Button variant="secondary" asChild>
        <Link to="/">Trang chá»§</Link>
      </Button>
    </div>
  );
};

export default NotFound;


[PlaylistItems.tsx]: ./src\pages\PlaylistItems.tsx
import { EllipsisIcon, SaveIcon, ShareIcon } from "@/components/icon";
import { useQuery } from "@tanstack/react-query";
import { LoaderIcon, Play } from "lucide-react";
import moment from "moment";
import { useParams } from "react-router-dom";
import { toast } from "sonner";

const PlaylistItems = () => {
  const { playlistId } = useParams();
  const {
    data: playlistItems,
    isLoading,
    isError,
  } = useQuery({
    queryKey: ["playlists", playlistId],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/playlistItems?part=snippet%2CcontentDetails&playlistId=${playlistId}&maxResults=25&key=${import.meta.env.VITE_API_KEY}`,
      );
      const data = await response.json();
      return data;
    },
    staleTime: 30 * 60 * 1000,
  });
  
  if (isError) {
    toast.error("ÄÃ£ xáº£y ra lá»—i khi táº£i danh sÃ¡ch phÃ¡t!");
  }

  if (isLoading) {
    return (
      <div className="flex h-screen items-center justify-center">
        <LoaderIcon className="h-10 w-10 animate-spin" />
      </div>
    );
  }
  return (
    <div className="lg:p-6">
      <div className="flex flex-col items-center gap-2 lg:flex-row lg:items-start">
        <div className="flex w-full flex-col gap-2 rounded-2xl bg-gradient-to-b from-slate-100/40 to-slate-100/10 p-6 lg:w-96">
          <img
            src={
              playlistItems.items[0].snippet.thumbnails?.maxres?.url ||
              playlistItems.items[0].snippet.thumbnails?.default?.url
            }
            alt=""
            className="h-48 rounded-md object-cover sm:h-56"
          />
          <h1 className="text-xl font-bold lg:text-3xl">
            {playlistItems.items[0].snippet.title.length > 50
              ? playlistItems.items[0].snippet.title.slice(0, 47) + "..."
              : playlistItems.items[0].snippet.title}
          </h1>
          <div className="flex items-center gap-2">
            <span className="text-xs font-medium">
              {playlistItems.items[0].snippet.channelTitle}
            </span>
          </div>
          <div className="flex items-center gap-1 text-xs">
            <span>Danh sÃ¡ch phÃ¡t</span>
            <span>â€¢</span>
            <span>{playlistItems.items.length} video</span>
          </div>
          <div className="mt-5 flex items-center gap-3">
            <button className="flex items-center gap-2 rounded-3xl bg-white p-2 px-8 text-black">
              <Play className="h-4 w-4 text-black" />
              <span className="text-sm font-medium">PhÃ¡t táº¥t cáº£</span>
            </button>
            <SaveIcon className="icon bg-gray-300/30" />
            <ShareIcon className="icon bg-gray-300/30" />
            <EllipsisIcon className="icon bg-gray-300/30" />
          </div>
        </div>
        <div className="flex-1">
          {playlistItems.items.map((item: any, index: number) => (
            <div key={item.id} className="flex rounded-md p-2 hover:bg-muted">
              <span className="my-auto flex h-8 w-8 items-center justify-center">
                {index + 1}
              </span>
              <div className="flex gap-2">
                <img
                  src={
                    item.snippet.thumbnails?.maxres?.url ||
                    item.snippet.thumbnails?.default?.url
                  }
                  alt=""
                  className="h-28 w-52 rounded-md object-cover"
                />
                <div className="flex-1 space-y-2">
                  <h1 className="font-medium">{item.snippet.title}</h1>
                  <div className="text-muted-foreground">
                    <div className="flex items-center gap-1 text-xs">
                      <span>{item.snippet.channelTitle}</span>
                      <span>â€¢</span>
                      <span>
                        {moment(item.contentDetails.videoPublishedAt).fromNow()}
                      </span>
                    </div>
                  </div>
                </div>
                <EllipsisIcon className="icon" />
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default PlaylistItems;


[Playlists.tsx]: ./src\pages\Playlists.tsx
import { useAuth } from "@/contexts/AuthContext";
import PlaylistItem from "@/components/PlaylistItem";
import { useQuery } from "@tanstack/react-query";
import { toast } from "sonner";
import { LoaderIcon } from "lucide-react";

const Playlists = () => {
  const { accessToken, login } = useAuth();

  const {
    data: playlists,
    isLoading,
    isError,
  } = useQuery({
    queryKey: ["playlists", accessToken],
    queryFn: async () => {
      if (!accessToken) {
        throw new Error("No access token");
      }

      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/playlists?part=snippet%2CcontentDetails%2Cstatus&mine=true&maxResults=50&key=${import.meta.env.VITE_API_KEY}`,
        {
          headers: {
            Authorization: `Bearer ${accessToken}`,
          },
        },
      );

      if (!response.ok) {
        throw new Error("Failed to fetch playlists");
      }

      const data = await response.json();
      return data;
    },
    enabled: !!accessToken,
    staleTime: 30 * 60 * 1000,
  });

  console.log(playlists);

  if (!accessToken) {
    return (
      <div className="p-6 text-center">
        <h1 className="mb-6 text-2xl font-bold text-white">Danh sÃ¡ch phÃ¡t</h1>
        <button
          onClick={login}
          className="rounded-lg bg-red-600 px-4 py-2 text-white hover:bg-red-700"
        >
          ÄÄƒng nháº­p vá»›i Google
        </button>
      </div>
    );
  }

  if (isError) {
    toast.error("ÄÃ£ xáº£y ra lá»—i khi táº£i danh sÃ¡ch phÃ¡t!");
  }

  if (isLoading) {
    return (
      <div className="flex h-screen items-center justify-center">
        <LoaderIcon className="h-10 w-10 animate-spin" />
      </div>
    );
  }

  return (
    <div className="p-6">
      <h1 className="mb-6 text-2xl font-bold text-white">Danh sÃ¡ch phÃ¡t</h1>
      <div className="grid grid-cols-1 gap-4 gap-y-10 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
        {playlists.items.map((playlist: any) => (
          <PlaylistItem
            key={playlist.id}
            id={playlist.id}
            title={playlist.snippet.title}
            channelTitle={playlist.snippet.channelTitle}
            thumbnails={
              playlist.snippet.thumbnails?.maxres?.url ||
              playlist.snippet.thumbnails?.default?.url
            }
            isPrivate={true}
            videoCount={playlist.contentDetails.itemCount}
          />
        ))}
      </div>
    </div>
  );
};

export default Playlists;


[SearchPage.tsx]: ./src\pages\SearchPage.tsx
import { useQuery } from "@tanstack/react-query";
import { useSearchParams } from "react-router-dom";
import { VideoItem } from "@/components/VideoItem";
import { toast } from "sonner";

const SearchPage = () => {
  const [searchParams] = useSearchParams();
  const searchQuery = searchParams.get("q") || "";

  const {
    data: searchResults,
    isError,
    isLoading,
  } = useQuery({
    queryKey: ["search", searchQuery],
    queryFn: async () => {
      const response = await fetch(
        `${import.meta.env.VITE_API_URL}/search?part=snippet&maxResults=20&q=${searchQuery}&type=video&key=${import.meta.env.VITE_API_KEY}`,
      );
      const data = await response.json();
      return data.items;
    },
    enabled: !!searchQuery,
  });

  if (isError) {
    toast.error("ÄÃ£ xáº£y ra lá»—i khi tÃ¬m kiáº¿m!");
  }

  return (
    <div className="">
      <div className="m-5 space-y-4">
        {isLoading
          ? [...Array(5)].map((_, i) => (
              <VideoItem.Skeleton key={i} layout="horizontal" />
            ))
          : searchResults?.map((video: any) => (
              <VideoItem
                className="grid gap-5 md:grid-cols-[500px_1fr] [&_img]:h-64"
                key={video.id.videoId}
                fullText
                viewCount={video.statistics?.viewCount}
                thumbnail={
                  video.snippet.thumbnails?.high?.url ||
                  video.snippet.thumbnails?.default?.url
                }
                duration={video.contentDetails?.duration}
                title={video.snippet.title}
                channelId={video.snippet.channelId}
                id={video.id.videoId}
                channelTitle={video.snippet.channelTitle}
                publishedAt={video.snippet.publishedAt}
              />
            ))}
      </div>
    </div>
  );
};

export default SearchPage;


[auth.service.ts]: ./src\services\auth.service.ts
export const getGoogleAuthUrl = () => {
  const url = new URL("https://accounts.google.com/o/oauth2/v2/auth");
  url.searchParams.append("client_id", import.meta.env.VITE_GOOGLE_CLIENT_ID);
  url.searchParams.append("response_type", "token");
  url.searchParams.append("redirect_uri", import.meta.env.REDIRECT_URI);
  url.searchParams.append(
    "scope",
    "https://www.googleapis.com/auth/youtube.readonly",
  );

  return url.toString();
};

export const getAccessTokenFromHash = () => {
  const hash = window.location.hash.substring(1);
  const params = new URLSearchParams(hash);
  return params.get("access_token");
};


[App.tsx]: ./src\App.tsx
import { Routes, BrowserRouter, Route, Navigate } from "react-router-dom";
import MainLayout from "@/layouts/MainLayout";
import ListVideos from "@/pages/ListVideos";
import DetailVideo from "./pages/DetailVideo";
import SearchPage from "./pages/SearchPage";
import DetailChanel from "./pages/DetailChanel";
import Playlists from "./pages/Playlists";
import NotFound from "./pages/NotFound";
import PlaylistItems from "./pages/PlaylistItems";
import { AuthProvider } from "@/contexts/AuthContext";

const App = () => {
  return (
    <AuthProvider>
      <BrowserRouter>
        <Routes>
          <Route path="/auth/callback" element={<Navigate to="/" />} />
          <Route path="/" element={<MainLayout />}>
            <Route index element={<ListVideos />} />
            <Route path="watch/:videoId" element={<DetailVideo />} />
            <Route path="search" element={<SearchPage />} />
            <Route path="chanel/:chanelId" element={<DetailChanel />} />
            <Route path="feed/playlists" element={<Playlists />} />
            <Route path="playlists/:playlistId" element={<PlaylistItems />} />
          </Route>
          <Route path="*" element={<NotFound />} />
        </Routes>
      </BrowserRouter>
    </AuthProvider>
  );
};

export default App;


[main.tsx]: ./src\main.tsx
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import "./index.css";
import App from "./App.tsx";
import { Toaster } from "@/components/ui/sonner.tsx";
import QueryProvider from "./contexts/query-provider.tsx";

createRoot(document.getElementById("root")!).render(
  <StrictMode>
    <QueryProvider>
      <Toaster />
      <App />
    </QueryProvider>
  </StrictMode>,
);


[types.ts]: ./src\types.ts
export interface Video {
  id: string;
  channelId: string;
  thumbnail: string;
  avatar: string;
  title: string;
  channelTitle: string;
  viewCount: number;
  duration: string;
  publishedAt: string;
  subscribers: number;
  relatedVideos: {
    id: string;
    channelId: string;
    thumbnail: string;
    avatar: string;
    title: string;
    channelTitle: string;
    viewCount: number;
    duration: string;
    publishedAt: string;
    subscribers: number;
  }[];
}


[vite-env.d.ts]: ./src\vite-env.d.ts
/// <reference types="vite/client" />


